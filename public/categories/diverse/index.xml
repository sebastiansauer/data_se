<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>diverse on Data Se</title>
    <link>/categories/diverse/</link>
    <description>Recent content in diverse on Data Se</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 07 Oct 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/categories/diverse/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Simple proof that the correlation coefficient cannot exceed abs(1)</title>
      <link>/2019/10/07/simple-proof-that-the-correlation-coefficient-cannot-exceed-abs-1/</link>
      <pubDate>Mon, 07 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>/2019/10/07/simple-proof-that-the-correlation-coefficient-cannot-exceed-abs-1/</guid>
      <description>Load packages library(tidyverse) library(MASS)  Motivation It is well-known that the notorious (Pearson’s) correlation cannot exceed an absolute value greater than 1, that is
\[ -1 \le r \le +1 \]
or
\[ |r| \le 1 \]
However, proofing this fact is less straightforward. A classical way of proofing the above inequality is by using the Cauchy-Schwarz inequality. From a teacher’s perspective, the CS inequality may not be ideal, because the students may lack some knowledge necessary for appreciating this proof.</description>
    </item>
    
    <item>
      <title>Some algebraic properties of z-scores</title>
      <link>/2019/10/07/some-algebraic-properties-of-z-scores/</link>
      <pubDate>Mon, 07 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>/2019/10/07/some-algebraic-properties-of-z-scores/</guid>
      <description>Load packages library(tidyverse)  Motivation Z-scores (z-values) are a useful and widely employed tool to gauge and compare measurements. For instance, z-scores help to compare the relative position of some measurements with respect to their distributions. In this post, we will prove some basic (algebraic) properties of z-values. There’s nothing new to that, it’s just I’d like to have it neat and concise somewhere to quickly find it. I’ll add some explanation for the ease of reception.</description>
    </item>
    
    <item>
      <title>How to setup Git(hub) in RStudio -- an annotated image series</title>
      <link>/2019/05/22/how-to-setup-git-hub-in-rstudio-an-annotated-image-series/</link>
      <pubDate>Wed, 22 May 2019 00:00:00 +0000</pubDate>
      
      <guid>/2019/05/22/how-to-setup-git-hub-in-rstudio-an-annotated-image-series/</guid>
      <description>There are many reasons to do version control. One is to allow Future You to understand what today’s You did.
OK, it may help to like technology stuff. Some say, version control really makes sense only for larger projects (say, writing your thesis) or developing in a team. Software development practically always benefits from version control.
If you don’t like memes and image-ladden stories, be warned, this post is not for you.</description>
    </item>
    
    <item>
      <title>Image path for blogdown</title>
      <link>/2017/11/28/image-path-for-blogdown/</link>
      <pubDate>Tue, 28 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>/2017/11/28/image-path-for-blogdown/</guid>
      <description> How to include external images to a hugo post?
Suppose we have a file img1.png in project1, ie., project1/img1.png. Do this:
Copy your folder with images to static/. Use this path in your blogdown post: /project/img1.png.   Mind the leading slash!  Example time This code (on my machine) ![](/images/textmining/tidytext-crop.png){ width=&amp;quot;20%&amp;quot; }
renders this:
Note the nice width option.
 Knitr way The knitr way works similarly:
knitr::include_graphics(&amp;quot;/images/textmining/tidytext-crop.png&amp;quot;)  </description>
    </item>
    
  </channel>
</rss>