<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>tidyeval on Data Se</title>
    <link>/tags/tidyeval/</link>
    <description>Recent content in tidyeval on Data Se</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 16 Nov 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/tags/tidyeval/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Some thoughts on tidyveal and environments in R</title>
      <link>/2017/11/16/tidyeval_basense/</link>
      <pubDate>Thu, 16 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>/2017/11/16/tidyeval_basense/</guid>
      <description>The tidyeval framework is a rather new, and in parts complementary, framework to dealing with non-standarde evaluation (NSE) in R. In short, NSE is about capturing some R-code, witholding execution, maybe editing the code, and finally execuing it later and/or somewhere else.
This post borrows heavily by Edwin Thon&amp;rsquo;s great post, and this post by the same author.
In addtion, most of the knowledge is derived from Hadley Wickham&amp;rsquo;s book Advanced R.</description>
    </item>
    
    <item>
      <title>Programming with dplyr: Part 03, working with strings</title>
      <link>/2017/08/09/dplyr_strings/</link>
      <pubDate>Wed, 09 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>/2017/08/09/dplyr_strings/</guid>
      <description>More on programming with dplyr: converting quosures to strings In this post, we have programmed a simple function using dplyr&amp;rsquo;s programming capabilities based on tidyeval; for more intro to programming with dplyr, see here.
In this post, we&amp;rsquo;ll go one step further and programm a function where a quosure will be turned to a string. Why this? Because quite a number of functions out there except strings as input parameters.</description>
    </item>
    
    <item>
      <title>Programming with dplyr: Part 02, writing a function</title>
      <link>/2017/07/06/prop_fav/</link>
      <pubDate>Thu, 06 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>/2017/07/06/prop_fav/</guid>
      <description>Recently, since dplyr &amp;lt;= 0.6.0 a new way of dealing with NSE was introduced, called tidyeval. As with every topic that begs our attention, the question &amp;ldquo;why bother&amp;rdquo; is in place. Theone answer is &amp;ldquo;you&amp;rsquo;ll need this stuff if you want to lock dplyr verbs inside a function&amp;rdquo;. Once you like dplyr and friends, a natural second step is to use the ideas not only for interactive use, but for more &amp;ldquo;programming&amp;rdquo; type, ie.</description>
    </item>
    
  </channel>
</rss>